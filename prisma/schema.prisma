generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String            @id @default(cuid())
  clerkId          String            @unique
  email            String            @unique
  name             String
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  quizResults      QuizResult[]
  roomLeaderboards RoomLeaderboard[]
  createdRooms     Room[]            @relation("RoomCreator")
}

model Room {
  id              String            @id @default(cuid())
  code            String            @unique
  name            String
  createdBy       String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  questionCount   Int               @default(5)
  timePerQuestion Int               @default(10)
  creator         User              @relation("RoomCreator", fields: [createdBy], references: [clerkId])
  sessions        QuizSession[]
  leaderboards    RoomLeaderboard[]
  questions       Question[]
}

model Question {
  id        String   @id @default(cuid())
  roomId    String
  text      String
  options   String[]
  answer    String
  createdAt DateTime @default(now())
  room      Room     @relation(fields: [roomId], references: [id])
}

model QuizSession {
  id           String       @id @default(cuid())
  roomId       String
  room         Room         @relation(fields: [roomId], references: [id])
  createdAt    DateTime     @default(now())
  participants String[]     @default([])
  currentIndex Int          @default(0)
  isActive     Boolean      @default(false)
  results      QuizResult[]
}

model QuizResult {
  id        String       @id @default(cuid())
  userId    String
  sessionId String
  score     Int          @default(0)
  createdAt DateTime     @default(now())
  user      User         @relation(fields: [userId], references: [clerkId])
  session   QuizSession  @relation(fields: [sessionId], references: [id])
}

model RoomLeaderboard {
  id           String   @id @default(cuid())
  roomId       String
  userId       String
  date         DateTime @default(now())
  dailyScore   Int      @default(0)
  allTimeScore Int      @default(0)
  room         Room     @relation(fields: [roomId], references: [id])
  user         User     @relation(fields: [userId], references: [clerkId])

  @@unique([roomId, userId, date])
}
